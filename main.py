from telegram.ext import ApplicationBuilder, MessageHandler, filters, ContextTypes, CommandHandler
from telegram import Update
import yt_dlp
import os

BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")

if not BOT_TOKEN:
    print("Error: TELEGRAM_BOT_TOKEN environment variable is required")
    exit(1)

# üü¢ –ö–æ–º–∞–Ω–¥–∞ /start
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    welcome_message = """
üé• Video Downloader Bot

–ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É —Å–∫–∞—á–∏–≤–∞—Ç—å –≤–∏–¥–µ–æ —Å —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º:
‚Ä¢ YouTube
‚Ä¢ Twitter/X
‚Ä¢ Instagram
‚Ä¢ TikTok 
‚Ä¢ –ò –º–Ω–æ–≥–∏—Ö –¥—Ä—É–≥–∏—Ö!

–ü—Ä–æ—Å—Ç–æ –æ—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ, –∏ —è —Å–∫–∞—á–∞—é –µ–≥–æ –¥–ª—è —Ç–µ–±—è.

–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: 50MB
‚Ä¢ –¢–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ –≤–∏–¥–µ–æ
    """
    await update.message.reply_text(welcome_message)

# üü° –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π (—Å—Å—ã–ª–æ–∫)
async def download_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    url = update.message.text.strip()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ —ç—Ç–æ URL
    if not (url.startswith('http://') or url.startswith('https://')):
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å –∫–æ—Ä—Ä–µ–∫—Ç–Ω—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ.")
        return

    await update.message.reply_text("–°–∫–∞—á–∏–≤–∞—é –≤–∏–¥–µ–æ, –ø–æ–¥–æ–∂–¥–∏ –Ω–µ–º–Ω–æ–≥–æ...")

    try:
        ydl_opts = {
            'outtmpl': 'downloads/%(title)s.%(ext)s',
            'format': 'best[filesize<50M]/best[ext=mp4]/best',
            'noplaylist': True,
        }

        # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
        os.makedirs('downloads', exist_ok=True)

        with yt_dlp.YoutubeDL(ydl_opts) as ydl:
            info = ydl.extract_info(url, download=True)
            filename = ydl.prepare_filename(info)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞
            if os.path.exists(filename):
                file_size = os.path.getsize(filename)
                if file_size > 50 * 1024 * 1024:  # 50MB
                    os.remove(filename)
                    await update.message.reply_text("–í–∏–¥–µ–æ —Å–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ (>50MB). –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –≤–∏–¥–µ–æ.")
                    return

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª
        if os.path.exists(filename):
            with open(filename, 'rb') as f:
                await update.message.reply_video(f, caption=f"–°–∫–∞—á–∞–Ω–æ —Å: {url}")
            
            # –£–¥–∞–ª—è–µ–º —Ñ–∞–π–ª –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏
            os.remove(filename)
        else:
            await update.message.reply_text("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–∫–∞—á–∞—Ç—å –≤–∏–¥–µ–æ.")

    except Exception as e:
        error_message = f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–∏: {str(e)}"
        if "Private video" in str(e):
            error_message = "–≠—Ç–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–µ –≤–∏–¥–µ–æ. –Ø –º–æ–≥—É —Å–∫–∞—á–∏–≤–∞—Ç—å —Ç–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ –≤–∏–¥–µ–æ."
        elif "Video unavailable" in str(e):
            error_message = "–í–∏–¥–µ–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ –∏–ª–∏ –±—ã–ª–æ —É–¥–∞–ª–µ–Ω–æ."
        elif "not supported" in str(e):
            error_message = "–≠—Ç–∞ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø–æ–∫–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è."
        
        await update.message.reply_text(error_message)

# üîß –ö–æ–º–∞–Ω–¥–∞ /help
async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_message = """
üîß –ü–æ–º–æ—â—å

–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã:
‚Ä¢ YouTube (youtube.com, youtu.be)
‚Ä¢ Twitter/X (twitter.com, x.com)
‚Ä¢ Instagram (instagram.com)
‚Ä¢ TikTok (tiktok.com)
‚Ä¢ Reddit (reddit.com)
‚Ä¢ Facebook (facebook.com)
‚Ä¢ Vimeo (vimeo.com)
‚Ä¢ –ò –º–Ω–æ–≥–∏–µ –¥—Ä—É–≥–∏–µ!

–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å:
1. –û—Ç–ø—Ä–∞–≤—å –º–Ω–µ —Å—Å—ã–ª–∫—É –Ω–∞ –≤–∏–¥–µ–æ
2. –ñ–¥–∏, –ø–æ–∫–∞ —è —Å–∫–∞—á–∞—é –≤–∏–¥–µ–æ
3. –ü–æ–ª—É—á–∞–π –≥–æ—Ç–æ–≤—ã–π —Ñ–∞–π–ª!

–ö–æ–º–∞–Ω–¥—ã:
/start - –ù–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É
/help - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É –ø–æ–º–æ—â—å

–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è:
‚Ä¢ –†–∞–∑–º–µ—Ä —Ñ–∞–π–ª–∞: –¥–æ 50MB
‚Ä¢ –¢–æ–ª—å–∫–æ –ø—É–±–ª–∏—á–Ω—ã–µ –≤–∏–¥–µ–æ
‚Ä¢ –í–∏–¥–µ–æ –±–µ–∑ –∞–≤—Ç–æ—Ä—Å–∫–∏—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π
    """
    await update.message.reply_text(help_message)

# üß† –ü–æ–¥–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
if __name__ == "__main__":
    print("Starting Telegram Video Downloader Bot...")
    app = ApplicationBuilder().token(BOT_TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("help", help_command))
    app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, download_video))
    
    print("Bot is running! Send /start to begin.")
    app.run_polling()
